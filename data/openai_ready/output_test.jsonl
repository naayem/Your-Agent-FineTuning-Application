{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Create a C++ program for randomly shuffling an array of integers."}, {"role": "assistant", "content": "#include <iostream>\n#include <algorithm>\n#include <random>\n\nvoid shuffleArray(int array[], int size) {\n\tstd::random_device rd;\n\tstd::mt19937 g(rd()); \n\tstd::shuffle(array, array+size, g); \n}\n\nint main() \n{ \n\tint array[] = {1, 2, 3, 4, 5, 6, 7, 8}; \n\tint size = sizeof(array) / sizeof(array[0]); \n\n    // Print original array\n    std::cout << \"Original array: \";\n    for (int i : array)\n        std::cout << i << \" \";\n    std::cout << \"\\n\";\n\n    // Shuffle array\n\tshuffleArray(array, size); \n\n    // Print shuffled array\n    std::cout << \"Shuffled array: \";\n    for (int i : array)\n        std::cout << i << \" \";\n    std::cout << \"\\n\";\n\n\treturn 0; \n}"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Remove the boilerplate code from the program for printing 10 random numbers. #### INPUT: import random\n\n# Generate 10 random numbers\nfor i in range(10):\n    # TODO"}, {"role": "assistant", "content": "import random\n\n# Generate 10 random numbers\nfor i in range(10):\n    print(random.randrange(1, 101))"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Write an SQL query to calculate the average order price for each product category in the \"orders\" table."}, {"role": "assistant", "content": "SELECT category, AVG(price) as \"Average Order Price\"\nFROM orders\nGROUP BY category;"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Change the variable `x` to the data type desired. #### INPUT: x = 'Hello World!'"}, {"role": "assistant", "content": "x = \"Hello World!\""}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Is it possible to set a breakpoint that is not associated with any source code line in a GDB program?"}, {"role": "assistant", "content": "Yes, it is possible to set a breakpoint that is not associated with any source code line in a GDB program. For example, you can set a breakpoint on a function or a memory address. You can do this by using the break command with '*' prefix followed by the address of the breakpoint."}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Create a table to store customer information."}, {"role": "assistant", "content": "CREATE TABLE customers (\n   id int NOT NULL AUTO_INCREMENT,\n   name varchar(100) NOT NULL,\n   email varchar(100) NOT NULL,\n   phone varchar(20) NOT NULL,\n   address varchar(200) NOT NULL,\n   PRIMARY KEY (id)\n);"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Parse the string and return the number of unique alphabets in the string. #### INPUT: StringInput = \"apple\""}, {"role": "assistant", "content": "int count = 0;\nfor (int i = 0; i < StringInput.length(); i++) {\n  if ((StringInput.charAt(i) >= 'a' && StringInput.charAt(i) <= 'z') || (StringInput.charAt(i) >= 'A' && StringInput.charAt(i) <= 'Z')) {\n   count++;\n  }\n}\nSystem.out.println(\"Number of unique alphabets: \" + count);"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Write a function to remove all whitespace characters from a given string. #### INPUT: myString = \"Hello   World    \""}, {"role": "assistant", "content": "def remove_whitespaces(myString):\n    return ''.join(myString.split())\n\nmyString = \"Hello   World    \"\nprint(remove_whitespaces(myString))"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Create a program that ciphers a given text using the caesar cipher. #### INPUT: text = \"This is a secret message\"\nkey = 3"}, {"role": "assistant", "content": "def caesar_cipher(text, key):\n    \"\"\"Cipher a given text using the Caesar Cipher.\"\"\"\n    ciphertext = \"\"\n    for char in text: \n        if not char.isalpha():\n            ciphertext += char\n            continue\n        offset = ord('a') if char.islower() else ord('A')\n        new_char = (ord(char) - offset + key) % 26\n        ciphertext += chr(offset + new_char)\n    return ciphertext"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Create a function in JavaScript that takes an array of integers and returns the largest number."}, {"role": "assistant", "content": "function findMax(arr) {\n    let max = arr[0];\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] > max) {\n            max = arr[i];\n        }\n    }\n    return max;\n}"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Write a Python code to calculate the mean of a given array. #### INPUT: [1,2,3,4]"}, {"role": "assistant", "content": "# calculate the mean of given array\narr = [1,2,3,4]\n\ndef calc_mean(arr):\n    sum = 0\n    for num in arr:\n        sum += num\n    return sum / len(arr)\n\nprint(calc_mean(arr)) # prints 2.5"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Find the sum of two numbers using C#. #### INPUT: The two numbers are: 123 and 456"}, {"role": "assistant", "content": "int  result = 123 + 456;\nConsole.WriteLine(result); //Output: 579"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Create a dictionary containing the key-value pair of a given string. #### INPUT: string = \"test string\""}, {"role": "assistant", "content": "\"\"\"\nCreate a dictionary containing the key-value pair of a given string\n\"\"\"\n\n# Given string\nstring = \"test string\"\n\n# Initialising an empty dictionary\nmy_dict = {}\n\n# Looping through the given string\nfor char in string:\n    # If the character is not already in dictionary\n    if char not in my_dict:\n        # Adding the character to the dictionary\n        my_dict[char] = 1\n    # If the character already exists in dictionary\n    else:\n        # Incrementing the frequency\n        my_dict[char] += 1\n        \n# Printing the dictionary\nprint(my_dict)"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Write a code to create a 3 x 3 matrix containing all 0s."}, {"role": "assistant", "content": "\"\"\"\nWrite a code to create a 3 x 3 matrix containing all 0s\n\"\"\"\n\n# Creating an empty 3 x 3 matrix\nmatrix = [[0 for x in range(3)] for y in range(3)] \n  \n# Printing the matrix\nprint(matrix)"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Write a SQL query to get the total amount from orders table where status is \"complete\"."}, {"role": "assistant", "content": "SELECT SUM(amount)\nFROM orders\nWHERE status = 'completed';"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Write a JavaScript code to calculate the factorial of a number"}, {"role": "assistant", "content": "function factorial(n){\n    if (n == 0){\n        return 1;\n    }\n    else{\n        return n * factorial(n - 1);\n    }\n}"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Create a new array that contains only the even numbers from a given array. #### INPUT: arr = [1, 2, 3, 4, 5, 6, 7, 8]"}, {"role": "assistant", "content": "arr = [x for x in arr if x % 2 == 0]"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Using the numpy library, create a 3x3 Identity Matrix."}, {"role": "assistant", "content": "iden_matrix = numpy.identity(3) \nprint(iden_matrix)"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Generate a unique and random password for a user using python."}, {"role": "assistant", "content": "import random \ncharacters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890!@#$%^&*()_+-=[ ]{}:'\npassword = random.choices(characters, k = 16) \nprint(\"\".join(password))"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Write code to find the longest substring of unique characters in a given string. #### INPUT: string = 'abcabcbb'"}, {"role": "assistant", "content": "def find_longest_substring(string):\n    \"\"\"\n    Finds the longest substring of unique characters in a given string.\n    \"\"\"\n    longest_substring = ''\n    current_substring = ''\n    for ch in string:\n        if ch not in current_substring:\n            current_substring += ch\n            if len(current_substring) > len(longest_substring):\n                longest_substring = current_substring\n        else:\n            current_substring = ch\n    return longest_substring"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Given a string, write a Python program to find the first non-repeating character in it. #### INPUT: input_str = \"aaaaabbbbccc\""}, {"role": "assistant", "content": "def first_non_repeating_char(input_str): \n \n    char_count = {}\n \n    for ch in input_str: \n \n        if ch in char_count: \n \n            char_count[ch] += 1\n \n        else: \n \n            char_count[ch] = 1\n \n    for ch in input_str: \n \n        if char_count[ch] == 1: \n            return ch \n \n    return None\n\nprint(first_non_repeating_char(input_str))"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Classify whether the following is an imperative or functional programming language. #### INPUT: Java"}, {"role": "assistant", "content": "Imperative Programming"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Create a CSS rule that sets the font-weight of all h1 headings to bold."}, {"role": "assistant", "content": "h1 {\n  font-weight: bold;\n}"}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Convert the following number into binary representation using Python. #### INPUT: 12"}, {"role": "assistant", "content": "binary = \"0b1100\""}]}
{"messages": [{"role": "system", "content": "JustAProgrammer is a programming assistant."}, {"role": "user", "content": "Edit the given HTML so that it renders as a centered, level-two heading. #### INPUT: <h1>Heading Text</h1>"}, {"role": "assistant", "content": "<h2 style=\"text-align: center;\">Heading Text</h2>"}]}
